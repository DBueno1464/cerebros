{"version":3,"sources":["utils/mutations.js","utils/auth.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","components/thoughts/ThoughtList.js","utils/queries.js","components/thoughts/ThoughtForm.js","pages/LandingPage.js","utils/localStorage.js","pages/SavedContent.js","pages/SearchContent.js","utils/API.js","App.js","index.js"],"names":["LOGIN_USER","gql","ADD_USER","SAVE_MOVIE","REMOVE_MOVIE","ADD_THOUGHT","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","SignupForm","useState","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","useMutation","addUser","handleInputChange","error","event","target","name","value","handleFormSubmit","a","preventDefault","currentTarget","checkValidity","stopPropagation","variables","data","Auth","login","console","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","LoginForm","loginUser","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Container","fluid","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","loggedIn","onClick","logout","Modal","size","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Title","Item","eventKey","Body","Content","Pane","handleModalClose","ThoughtList","thoughts","title","showTitle","showUsername","length","map","thought","key","_id","thoughtAuthor","style","fontSize","createdAt","thoughtText","GET_ME","QUERY_THOUGHTS","ThoughtForm","setThoughtText","characterCount","setCharacterCount","update","cache","addThought","readQuery","query","writeQuery","e","me","getProfile","lineHeight","resize","message","Home","useQuery","loading","border","removeMovieId","movieId","savedMovieIds","JSON","parse","updatedSavedMovieIds","filter","savedMovieId","stringify","SavedContent","removeMovie","userData","handleDeleteMovie","Jumbotron","savedMovies","CardColumns","movie","Card","image","Img","src","alt","Text","description","SearchContent","searchedMovie","setSearchedMovie","searchInput","setSearchInput","setSavedMovieIds","useEffect","bookIdArr","fetch","url","response","ok","Error","json","results","movieData","saveMovie","handleSaveMovie","movieToSave","find","input","Row","Col","xs","md","some","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","exact","path","component","LandingPage","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"0bAEaA,EAAaC,YAAH,qNAYVC,EAAWD,YAAH,kQAYRE,EAAaF,YAAH,mRAiBVG,EAAeH,YAAH,yRAiBZI,EAAcJ,YAAH,sQ,iCCZT,M,0FA1Cb,WACE,OAAOK,IAAOC,KAAKC,c,sBAIrB,WAEE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,K,4BAIzC,SAAeA,GACb,IAEE,OADgBH,IAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,K,sBAIX,WAEE,OAAOC,aAAaC,QAAQ,c,mBAG9B,SAAMC,GAEJF,aAAaG,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,O,oBAGzB,WAEEN,aAAaO,WAAW,YAExBH,OAAOC,SAASC,OAAO,S,MCkEZE,EAtGI,WAEjB,MAAwCC,mBAAS,CAAEC,SAAU,GAAIC,MAAO,GAAIC,SAAU,KAAtF,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,EAAoBL,oBAAS,GAAtBM,EAAP,oBAEA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,EAA6BC,YAAY/B,GAAzC,mBAAOgC,EAAP,KAEMC,GAFN,KAAkBC,MAEQ,SAACC,GACzB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdX,EAAgB,2BAAKD,GAAN,kBAAqBW,EAAOC,OAGvCC,EAAgB,uCAAG,WAAOJ,GAAP,iBAAAK,EAAA,6DACvBL,EAAMM,kBAIuB,IADhBN,EAAMO,cACVC,kBACPR,EAAMM,iBACNN,EAAMS,mBAPe,kBAWEZ,EAAQ,CAC7Ba,UAAU,eAAMnB,KAZG,gBAWboB,EAXa,EAWbA,KAKRC,EAAKC,MAAMF,EAAKd,QAAQzB,OAhBH,kDAkBrB0C,QAAQf,MAAR,MACAJ,GAAa,GAnBQ,QAsBvBH,EAAgB,CACdJ,SAAU,GACVC,MAAO,GACPC,SAAU,KAzBW,0DAAH,sDA6BtB,OACE,oCAEE,kBAACyB,EAAA,EAAD,CAAMC,YAAU,EAACvB,UAAWA,EAAWwB,SAAUb,GAE/C,kBAACc,EAAA,EAAD,CAAOC,aAAW,EAACC,QAAS,kBAAMzB,GAAa,IAAQ0B,KAAM3B,EAAW4B,QAAQ,UAAhF,0CAIA,kBAACP,EAAA,EAAKQ,MAAN,KACE,kBAACR,EAAA,EAAKS,MAAN,CAAYC,QAAQ,YAApB,YACA,kBAACV,EAAA,EAAKW,QAAN,CACEC,KAAK,OACLC,YAAY,gBACZ1B,KAAK,WACL2B,SAAU/B,EACVK,MAAOZ,EAAaH,SACpB0C,UAAQ,IAEV,kBAACf,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,0BAGF,kBAACZ,EAAA,EAAKQ,MAAN,KACE,kBAACR,EAAA,EAAKS,MAAN,CAAYC,QAAQ,SAApB,SACA,kBAACV,EAAA,EAAKW,QAAN,CACEC,KAAK,QACLC,YAAY,qBACZ1B,KAAK,QACL2B,SAAU/B,EACVK,MAAOZ,EAAaF,MACpByC,UAAQ,IAEV,kBAACf,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,uBAGF,kBAACZ,EAAA,EAAKQ,MAAN,KACE,kBAACR,EAAA,EAAKS,MAAN,CAAYC,QAAQ,YAApB,YACA,kBAACV,EAAA,EAAKW,QAAN,CACEC,KAAK,WACLC,YAAY,gBACZ1B,KAAK,WACL2B,SAAU/B,EACVK,MAAOZ,EAAaD,SACpBwC,UAAQ,IAEV,kBAACf,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,0BAEF,kBAACK,EAAA,EAAD,CACEC,WAAY1C,EAAaH,UAAYG,EAAaF,OAASE,EAAaD,UACxEqC,KAAK,SACLL,QAAQ,WAHV,aCROY,EAlFG,WAChB,MAAwC/C,mBAAS,CAAEE,MAAO,GAAIC,SAAU,KAAxE,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoBL,oBAAS,GAAtBM,EAAP,oBACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMG,EAAoB,SAACE,GACzB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdX,EAAgB,2BAAKD,GAAN,kBAAqBW,EAAOC,MAG7C,EAAsBP,YAAYjC,GAA1BwE,EAAR,oBAEM/B,EAAgB,uCAAG,WAAOJ,GAAP,iBAAAK,EAAA,6DACvBL,EAAMM,kBAIuB,IADhBN,EAAMO,cACVC,kBACPR,EAAMM,iBACNN,EAAMS,mBAPe,kBAWE0B,EAAU,CAC/BzB,UAAU,eAAMnB,KAZG,gBAWboB,EAXa,EAWbA,KAIRC,EAAKC,MAAMF,EAAKE,MAAMzC,OAfD,kDAiBrB0C,QAAQf,MAAR,MACAJ,GAAa,GAlBQ,QAqBvBH,EAAgB,CACdJ,SAAU,GACVC,MAAO,GACPC,SAAU,KAxBW,0DAAH,sDA4BtB,OACE,oCACE,kBAACyB,EAAA,EAAD,CAAMC,YAAU,EAACvB,UAAWA,EAAWwB,SAAUb,GAC/C,kBAACc,EAAA,EAAD,CAAOC,aAAW,EAACC,QAAS,kBAAMzB,GAAa,IAAQ0B,KAAM3B,EAAW4B,QAAQ,UAAhF,qDAGA,kBAACP,EAAA,EAAKQ,MAAN,KACE,kBAACR,EAAA,EAAKS,MAAN,CAAYC,QAAQ,SAApB,SACA,kBAACV,EAAA,EAAKW,QAAN,CACEC,KAAK,OACLC,YAAY,aACZ1B,KAAK,QACL2B,SAAU/B,EACVK,MAAOZ,EAAaF,MACpByC,UAAQ,IAEV,kBAACf,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,uBAGF,kBAACZ,EAAA,EAAKQ,MAAN,KACE,kBAACR,EAAA,EAAKS,MAAN,CAAYC,QAAQ,YAApB,YACA,kBAACV,EAAA,EAAKW,QAAN,CACEC,KAAK,WACLC,YAAY,gBACZ1B,KAAK,WACL2B,SAAU/B,EACVK,MAAOZ,EAAaD,SACpBwC,UAAQ,IAEV,kBAACf,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,0BAEF,kBAACK,EAAA,EAAD,CACEC,WAAY1C,EAAaF,OAASE,EAAaD,UAC/CqC,KAAK,SACLL,QAAQ,WAHV,aCJOc,EApEG,WAEhB,MAAkCjD,oBAAS,GAA3C,mBAAOkD,EAAP,KAAkBC,EAAlB,KAEA,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOlB,QAAQ,OAAOmB,OAAO,MACtC,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,GAAIC,IAAMC,GAAG,KAA3B,YAGA,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,WAC7B,kBAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,UAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,WAAvB,qBAICnC,EAAK0C,WACJ,oCACE,kBAACF,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,UAAvB,oBAGA,kBAACK,EAAA,EAAIN,KAAL,CAAUS,QAAS3C,EAAK4C,QAAxB,WAGF,kBAACJ,EAAA,EAAIN,KAAL,CAAUS,QAAS,kBAAMjB,GAAa,KAAtC,qBAOV,kBAACmB,EAAA,EAAD,CACEC,KAAK,KACLrC,KAAMgB,EACNsB,OAAQ,kBAAMrB,GAAa,IAC3BsB,kBAAgB,gBAEhB,kBAACC,EAAA,EAAInB,UAAL,CAAeoB,iBAAiB,SAC9B,kBAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACvB,kBAACP,EAAA,EAAMQ,MAAP,CAAad,GAAG,gBACd,kBAACC,EAAA,EAAD,CAAK9B,QAAQ,SACX,kBAAC8B,EAAA,EAAIc,KAAL,KACE,kBAACd,EAAA,EAAIN,KAAL,CAAUqB,SAAS,SAAnB,UAEF,kBAACf,EAAA,EAAIc,KAAL,KACE,kBAACd,EAAA,EAAIN,KAAL,CAAUqB,SAAS,UAAnB,eAKR,kBAACV,EAAA,EAAMW,KAAP,KACE,kBAACP,EAAA,EAAIQ,QAAL,KACE,kBAACR,EAAA,EAAIS,KAAL,CAAUH,SAAS,SACjB,kBAAC,EAAD,CAAWI,iBAAkB,kBAAMjC,GAAa,OAElD,kBAACuB,EAAA,EAAIS,KAAL,CAAUH,SAAS,UACjB,kBAAC,EAAD,CAAYI,iBAAkB,kBAAMjC,GAAa,a,SCblDkC,EAlDK,SAAC,GAKd,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,MAGI,IAFJC,iBAEI,aADJC,oBACI,SACJ,OAAKH,EAASI,OAKZ,6BACGF,GAAa,4BAAKD,GAClBD,GACCA,EAASK,KAAI,SAACC,GAAD,OACX,yBAAKC,IAAKD,EAAQE,IAAK5B,UAAU,aAC/B,wBAAIA,UAAU,6CACXuB,EACC,kBAAC,IAAD,CACEvB,UAAU,aACVN,GAAE,oBAAegC,EAAQG,gBAExBH,EAAQG,cAJX,IAI0B,6BACxB,0BAAMC,MAAO,CAAEC,SAAU,SAAzB,uBACuBL,EAAQM,YAIjC,oCACE,0BAAMF,MAAO,CAAEC,SAAU,SAAzB,2BAC2BL,EAAQM,aAKzC,yBAAKhC,UAAU,0BACb,2BAAI0B,EAAQO,cAEd,kBAAC,IAAD,CACEjC,UAAU,wCACVN,GAAE,oBAAegC,EAAQE,MAF3B,6CA/BD,gD,QCREM,GAAS3H,YAAH,mUAuCN4H,GAAiB5H,YAAH,mJC0EZ6H,GA1GK,WAClB,MAAsCtG,mBAAS,IAA/C,mBAAOmG,EAAP,KAAoBI,EAApB,KAEA,EAA4CvG,mBAAS,GAArD,mBAAOwG,EAAP,KAAuBC,EAAvB,KAEA,EAAgChG,YAAY5B,EAAa,CACvD6H,OADuD,SAChDC,EADgD,GACd,IAAjBC,EAAgB,EAAxBpF,KAAQoF,WACtB,IACE,IAAQtB,EAAaqB,EAAME,UAAU,CAAEC,MAAOT,KAAtCf,SAERqB,EAAMI,WAAW,CACfD,MAAOT,GACP7E,KAAM,CAAE8D,SAAS,CAAEsB,GAAH,mBAAkBtB,OAEpC,MAAO0B,GACPrF,QAAQf,MAAMoG,GAGhB,IACE,IAAQC,EAAON,EAAME,UAAU,CAAEC,MAAOV,KAAhCa,GACRN,EAAMI,WAAW,CACfD,MAAOV,GACP5E,KAAM,CAAEyF,GAAG,2BAAMA,GAAP,IAAW3B,SAAS,GAAD,mBAAM2B,EAAG3B,UAAT,CAAmBsB,SAElD,MAAOI,GACPrF,QAAQf,MAAMoG,OApBpB,mBAAOJ,EAAP,KAAqBhG,EAArB,KAAqBA,MAyBfK,EAAgB,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,6DACvBL,EAAMM,iBADiB,kBAIEyF,EAAW,CAChCrF,UAAW,CACT4E,cACAJ,cAAetE,EAAKyF,aAAa1F,KAAKvB,YAPrB,kBAIbuB,KAOR+E,EAAe,IAXM,gDAarB5E,QAAQf,MAAR,MAbqB,yDAAH,sDA0BtB,OACE,6BACE,0DAECa,EAAK0C,WACJ,oCACE,uBACED,UAAS,cACY,MAAnBsC,GAA0B5F,EAAQ,cAAgB,KAFtD,oBAKoB4F,EALpB,QAOA,0BACEtC,UAAU,gEACVpC,SAAUb,GAEV,yBAAKiD,UAAU,mBACb,8BACEnD,KAAK,cACL0B,YAAY,0BACZzB,MAAOmF,EACPjC,UAAU,mBACV8B,MAAO,CAAEmB,WAAY,MAAOC,OAAQ,YACpC1E,SAjCO,SAAC7B,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAED,gBAATD,GAA0BC,EAAM0E,QAAU,MAC5Ca,EAAevF,GACfyF,EAAkBzF,EAAM0E,aAgClB,yBAAKxB,UAAU,mBACb,4BAAQA,UAAU,iCAAiC1B,KAAK,UAAxD,gBAID5B,GACC,yBAAKsD,UAAU,wCACZtD,EAAMyG,WAMf,qFAC0D,IACxD,kBAAC,IAAD,CAAMzD,GAAG,UAAT,SAFF,OAEoC,kBAAC,IAAD,CAAMA,GAAG,WAAT,cCxE7B0D,GA5BF,WACX,MAA0BC,YAASlB,IAA3BmB,EAAR,EAAQA,QAAShG,EAAjB,EAAiBA,KACX8D,GAAe,OAAJ9D,QAAI,IAAJA,OAAA,EAAAA,EAAM8D,WAAY,GAEnC,OACE,8BACE,yBAAKpB,UAAU,2BACb,yBACEA,UAAU,4BACV8B,MAAO,CAAEyB,OAAQ,uBAEjB,kBAAC,GAAD,OAEF,yBAAKvD,UAAU,wBACZsD,EACC,2CAEA,kBAAC,EAAD,CACElC,SAAUA,EACVC,MAAM,oC,8BCXPmC,GAAgB,SAACC,GAC5B,IAAMC,EAAgBrI,aAAaC,QAAQ,gBACvCqI,KAAKC,MAAMvI,aAAaC,QAAQ,iBAChC,KAEJ,IAAKoI,EACH,OAAO,EAGT,IAAMG,EAAoB,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAeI,QAAO,SAACC,GAAD,OAAkBA,IAAiBN,KAGtF,OAFApI,aAAaG,QAAQ,eAAgBmI,KAAKK,UAAUH,KAE7C,GC6EMI,GAzFM,WACnB,MAA+BZ,YAASnB,IAAjCoB,EAAP,EAAOA,QAAgBhG,GAAvB,EAAgBZ,MAAhB,EAAuBY,MAEvB,EAAsBf,YAAY7B,GAA3BwJ,EAAP,oBAEMC,GAAe,OAAJ7G,QAAI,IAAJA,OAAA,EAAAA,EAAMyF,KAAM,GAIvBqB,EAAiB,uCAAG,WAAOX,GAAP,SAAAzG,EAAA,yDACVO,EAAK0C,WAAa1C,EAAKzC,WAAa,KAD1B,0CAKf,GALe,gCAShBoJ,EAAY,CAChB7G,UAAW,CAAEoG,aAVO,OActBD,GAAcC,GAdQ,gDAgBtBhG,QAAQf,MAAR,MAhBsB,yDAAH,sDAoBvB,OAAI4G,EAEA,oCACE,kBAACe,GAAA,EAAD,CAAW/E,OAAK,EAACU,UAAU,sBACzB,kBAACX,EAAA,EAAD,KACE,sDAGJ,kBAACA,EAAA,EAAD,KACE,4CAON,oCACE,kBAACgF,GAAA,EAAD,CAAW/E,OAAK,EAACU,UAAU,sBACzB,kBAACX,EAAA,EAAD,KACE,wDAGJ,kBAACA,EAAA,EAAD,KACE,4BACG8E,EAASG,YAAY9C,OAArB,kBACc2C,EAASG,YAAY9C,OADnC,kBAEqC,IAAhC2C,EAASG,YAAY9C,OAAe,QAAU,SAFnD,KAIG,8BAEN,kBAAC+C,GAAA,EAAD,KACGJ,EAASG,YAAY7C,KAAI,SAAC+C,GACzB,OACE,kBAACC,GAAA,EAAD,CAAM9C,IAAK6C,EAAMf,QAASF,OAAO,QAC9BiB,EAAME,MACL,kBAACD,GAAA,EAAKE,IAAN,CACEC,IAAKJ,EAAME,MACXG,IAAG,wBAAmBL,EAAMnD,OAC5BpD,QAAQ,QAER,KACJ,kBAACwG,GAAA,EAAK1D,KAAN,KACE,kBAAC0D,GAAA,EAAK7D,MAAN,KAAa4D,EAAMnD,OACnB,kBAACoD,GAAA,EAAKK,KAAN,KAAYN,EAAMO,aAClB,kBAACpG,EAAA,EAAD,CACEqB,UAAU,uBACVE,QAAS,kBAAMkE,EAAkBI,EAAMf,WAFzC,+B,SC2EHuB,I,OAlJO,WACpB,MAA0ClJ,mBAAS,IAAnD,mBAAOmJ,EAAP,KAAsBC,EAAtB,KAEA,EAAsCpJ,mBAAS,IAA/C,mBAAOqJ,EAAP,KAAoBC,EAApB,KAGA,EAA0CtJ,mBFvBpBT,aAAaC,QAAQ,gBACvCqI,KAAKC,MAAMvI,aAAaC,QAAQ,iBAChC,IEqBJ,mBAAOoI,EAAP,KAAsB2B,EAAtB,KAEAC,qBAAU,WACR,OAAO,WFnBiB,IAACC,KEmBC7B,GFlBdlC,OACZnG,aAAaG,QAAQ,eAAgBmI,KAAKK,UAAUuB,IAEpDlK,aAAaO,WAAW,oBEmB1B,IAAMmB,EAAgB,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACvBL,EAAMM,iBACDkI,EAFkB,0CAGd,GAHc,gCCzBlBK,MACPC,sDDgCuCN,GARd,WAQfO,EARe,QAYPC,GAZO,sBAab,IAAIC,MAAM,yBAbG,wBAgBKF,EAASG,OAhBd,iBAgBbC,EAhBa,EAgBbA,QAEFC,EAAYD,EAAQrE,KAAI,SAAC+C,GAAD,MAAY,CACxCf,QAASe,EAAM1E,GACfuB,MAAOmD,EAAMnD,MACb0D,YAAaP,EAAMO,YACnBL,MAAOF,EAAME,OAAS,OAGxBQ,EAAiBa,GACjBX,EAAe,IA1BM,kDA4BrB3H,QAAQf,MAAR,MA5BqB,0DAAH,sDAgCtB,EAAoBH,YAAY9B,GAAzBuL,EAAP,oBAEMC,EAAe,uCAAG,WAAOxC,GAAP,iBAAAzG,EAAA,yDAChBkJ,EAAcjB,EAAckB,MAChC,SAAC3B,GAAD,OAAWA,EAAMf,UAAYA,KAGjBlG,EAAK0C,WAAa1C,EAAKzC,WAAa,KAL5B,0CAQb,GARa,gCAYGkL,EAAU,CAC/B3I,UAAW,CAAE+I,MAAOF,KAbF,kBAYZ5I,KAIR+H,EAAiB,GAAD,mBAAK3B,GAAL,CAAoBwC,EAAYzC,WAhB5B,kDAkBpBhG,QAAQf,MAAR,MAlBoB,0DAAH,sDAsBrB,OACE,oCACE,kBAAC2H,GAAA,EAAD,CAAW/E,OAAK,EAACU,UAAU,sBACzB,kBAACX,EAAA,EAAD,KAEE,4EACA,kBAAC3B,EAAA,EAAD,CAAME,SAAUb,GAId,kBAACW,EAAA,EAAK2I,IAAN,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,kBAAC9I,EAAA,EAAKW,QAAN,CACExB,KAAK,cACLC,MAAOqI,EACP3G,SAAU,SAACsE,GAAD,OAAOsC,EAAetC,EAAElG,OAAOE,QACzCwB,KAAK,OACL+B,KAAK,KACL9B,YAAY,wBAGhB,kBAAC+H,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,kBAAC7H,EAAA,EAAD,CAAQL,KAAK,SAASL,QAAQ,UAAUoC,KAAK,MAA7C,sBASV,kBAAChB,EAAA,EAAD,KACE,4BACG4F,EAAczD,OAAd,kBACcyD,EAAczD,OAD5B,aAEG,+BAEN,kBAAC+C,GAAA,EAAD,KACGU,EAAcxD,KAAI,SAAC+C,GAClB,OACE,kBAACC,GAAA,EAAD,CAAM9C,IAAK6C,EAAMf,QAASF,OAAO,QAC9B,IACAiB,EAAME,MACL,kBAACD,GAAA,EAAKE,IAAN,CACEC,IAAKJ,EAAME,MACXG,IAAG,wBAAmBL,EAAMnD,OAC5BpD,QAAQ,QAER,KACJ,kBAACwG,GAAA,EAAK1D,KAAN,KACE,kBAAC0D,GAAA,EAAK7D,MAAN,KAAa4D,EAAMnD,OACnB,kBAACoD,GAAA,EAAKK,KAAN,KAAYN,EAAMO,aACjBxH,EAAK0C,YACJ,kBAACtB,EAAA,EAAD,CACEC,SAAQ,OAAE8E,QAAF,IAAEA,OAAF,EAAEA,EAAe+C,MACvB,SAAC1C,GAAD,OAAkBA,IAAiBS,EAAMf,WAE3CzD,UAAU,qBACVE,QAAS,kBAAM+F,EAAgBzB,EAAMf,YAEvB,OAAbC,QAAa,IAAbA,OAAA,EAAAA,EAAe+C,MACd,SAAC1C,GAAD,OAAkBA,IAAiBS,EAAMf,YAEvC,yCACA,kCE3IpBiD,GAAW,IAAIC,IAAe,CAClCC,IAAK,aAGDC,GAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1BjM,EAAQM,aAAaC,QAAQ,YACnC,MAAO,CACL0L,QAAQ,2BACHA,GADE,IAELC,cAAelM,EAAK,iBAAaA,GAAU,SAK3CmM,GAAS,IAAIC,IAAa,CAC9BC,KAAMP,GAASQ,OAAOX,IACtBjE,MAAO,IAAI6E,MAwBEC,OApBf,WACE,OACE,kBAACC,EAAA,EAAD,CAAgBN,OAAQA,IACtB,kBAAC,IAAD,KACE,yBAAKlH,UAAU,6CACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyH,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAW3C,KACvC,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,SAASC,UAAW1D,KACtC,kBAAC,IAAD,CAAO4D,OAAQ,kBAAM,wBAAI7H,UAAU,aAAd,wBCrCjC8H,IAASD,OACP,kBAAC,IAAME,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c501f96c.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const SAVE_MOVIE = gql`\n  mutation saveMovie($input: savedMovie!) {\n    saveMovie(input: $input) {\n      username\n      email\n      movieCount\n      savedMovies {\n        _id\n        movieId\n        image\n        title\n        description\n      }\n    }\n  }\n`;\n\nexport const REMOVE_MOVIE = gql`\n  mutation removeMovie($movieId: String!) {\n    removeMovie(movieId: $movieId) {\n      username\n      email\n      movieCount\n      savedMovies {\n        _id\n        movieId\n        image\n        title\n        description\n      }\n    }\n  }\n`;\n\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n      }\n    }\n  }\n`;\n","// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData }\n      });\n\n     \n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const [ loginUser ] = useMutation(LOGIN_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData }\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Cerebros\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/search'>\n                Search For Movies\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Profile\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ThoughtList = ({\r\n  thoughts,\r\n  title,\r\n  showTitle = true,\r\n  showUsername = true,\r\n}) => {\r\n  if (!thoughts.length) {\r\n    return <h3>No Thoughts Yet</h3>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showTitle && <h3>{title}</h3>}\r\n      {thoughts &&\r\n        thoughts.map((thought) => (\r\n          <div key={thought._id} className=\"card mb-3\">\r\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\r\n              {showUsername ? (\r\n                <Link\r\n                  className=\"text-light\"\r\n                  to={`/profiles/${thought.thoughtAuthor}`}\r\n                >\r\n                  {thought.thoughtAuthor} <br />\r\n                  <span style={{ fontSize: \"1rem\" }}>\r\n                    had this thought on {thought.createdAt}\r\n                  </span>\r\n                </Link>\r\n              ) : (\r\n                <>\r\n                  <span style={{ fontSize: \"1rem\" }}>\r\n                    You had this thought on {thought.createdAt}\r\n                  </span>\r\n                </>\r\n              )}\r\n            </h4>\r\n            <div className=\"card-body bg-light p-2\">\r\n              <p>{thought.thoughtText}</p>\r\n            </div>\r\n            <Link\r\n              className=\"btn btn-primary btn-block btn-squared\"\r\n              to={`/thoughts/${thought._id}`}\r\n            >\r\n              Join the discussion on this thought.\r\n            </Link>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtList;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_ME = gql`\r\n  query me {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      movieCount\r\n      savedMovies {\r\n        movieId\r\n        image\r\n        title\r\n        description\r\n      }\r\n      thoughts {\r\n        _id\r\n        thoughtText\r\n        thoughtAuthor\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// export const QUERY_ME = gql`\r\n//   query me {\r\n//     me {\r\n//       _id\r\n//       username\r\n//       email\r\n//       thoughts {\r\n//         _id\r\n//         thoughtText\r\n//         thoughtAuthor\r\n//         createdAt\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport const QUERY_THOUGHTS = gql`\r\n  query getThoughts {\r\n    thoughts {\r\n      _id\r\n      thoughtText\r\n      thoughtAuthor\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { ADD_THOUGHT } from \"../../utils/mutations\";\r\nimport { QUERY_THOUGHTS, GET_ME } from \"../../utils/queries\";\r\n\r\nimport Auth from \"../../utils/auth\";\r\n\r\nconst ThoughtForm = () => {\r\n  const [thoughtText, setThoughtText] = useState(\"\");\r\n\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\r\n    update(cache, { data: { addThought } }) {\r\n      try {\r\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_THOUGHTS,\r\n          data: { thoughts: [addThought, ...thoughts] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      try {\r\n        const { me } = cache.readQuery({ query: GET_ME });\r\n        cache.writeQuery({\r\n          query: GET_ME,\r\n          data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addThought({\r\n        variables: {\r\n          thoughtText,\r\n          thoughtAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setThoughtText(\"\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"thoughtText\" && value.length <= 280) {\r\n      setThoughtText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>What's on your techy mind?</h3>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? \"text-danger\" : \"\"\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"thoughtText\"\r\n                placeholder=\"Here's a new thought...\"\r\n                value={thoughtText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Thought\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your thoughts. Please{\" \"}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtForm;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport ThoughtList from \"../components/thoughts/ThoughtList\";\r\nimport ThoughtForm from \"../components/thoughts/ThoughtForm\";\r\n\r\nimport { QUERY_THOUGHTS } from \"../utils/queries\";\r\n\r\nconst Home = () => {\r\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\r\n  const thoughts = data?.thoughts || [];\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        <div\r\n          className=\"col-12 col-md-10 mb-3 p-3\"\r\n          style={{ border: \"1px dotted #1a1a1a\" }}\r\n        >\r\n          <ThoughtForm />\r\n        </div>\r\n        <div className=\"col-12 col-md-8 mb-3\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <ThoughtList\r\n              thoughts={thoughts}\r\n              title=\"Some Feed for Thought(s)...\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const getSavedMovieIds = () => {\n  const savedMovieIds = localStorage.getItem('saved_movies')\n    ? JSON.parse(localStorage.getItem('saved_movies'))\n    : [];\n\n  return savedMovieIds;\n};\n\nexport const saveMovieIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_movies', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_movies');\n  }\n};\n\nexport const removeMovieId = (movieId) => {\n  const savedMovieIds = localStorage.getItem('saved_movies')\n    ? JSON.parse(localStorage.getItem('saved_movies'))\n    : null;\n\n  if (!savedMovieIds) {\n    return false;\n  }\n\n  const updatedSavedMovieIds = savedMovieIds?.filter((savedMovieId) => savedMovieId !== movieId);\n  localStorage.setItem('saved_movies', JSON.stringify(updatedSavedMovieIds));\n\n  return true;\n};\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Jumbotron,\r\n  Container,\r\n  CardColumns,\r\n  Card,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nimport { useLazyQuery, useQuery, useMutation } from \"@apollo/client\";\r\nimport { GET_ME } from \"../utils/queries\";\r\nimport { REMOVE_MOVIE } from \"../utils/mutations\";\r\n\r\nimport Auth from \"../utils/auth\";\r\nimport { removeMovieId } from \"../utils/localStorage\";\r\n\r\nconst SavedContent = () => {\r\n  const {loading, error, data} = useQuery(GET_ME);\r\n  \r\n  const [removeMovie] = useMutation(REMOVE_MOVIE);\r\n  \r\n  const userData = data?.me || [];\r\n  // console.log(data, loading);\r\n\r\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\r\n  const handleDeleteMovie = async (movieId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      // console.log(\"token not found\");\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      await removeMovie({\r\n        variables: { movieId },\r\n      });\r\n\r\n      //     upon success, remove book's id from localStorage\r\n      removeMovieId(movieId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Jumbotron fluid className=\"text-light bg-dark\">\r\n          <Container>\r\n            <h1>Viewing saved books!</h1>\r\n          </Container>\r\n        </Jumbotron>\r\n        <Container>\r\n          <h2>Loading...</h2>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className=\"text-light bg-dark\">\r\n        <Container>\r\n          <h1>Viewing saved content!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedMovies.length\r\n            ? `Viewing ${userData.savedMovies.length} saved ${\r\n                userData.savedMovies.length === 1 ? \"movie\" : \"movies\"\r\n              }:`\r\n            : \"You have no saved content!\"}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedMovies.map((movie) => {\r\n            return (\r\n              <Card key={movie.movieId} border=\"dark\">\r\n                {movie.image ? (\r\n                  <Card.Img\r\n                    src={movie.image}\r\n                    alt={`The cover for ${movie.title}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{movie.title}</Card.Title>\r\n                  <Card.Text>{movie.description}</Card.Text>\r\n                  <Button\r\n                    className=\"btn-block btn-danger\"\r\n                    onClick={() => handleDeleteMovie(movie.movieId)}\r\n                  >\r\n                    Delete this Movie!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedContent;\r\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { SAVE_MOVIE } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\nimport { searchMovie } from \"../utils/API\";\nimport { saveMovieIds, getSavedMovieIds } from \"../utils/localStorage\";\n\nconst SearchContent = () => {\n  const [searchedMovie, setSearchedMovie] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  // create state to hold saved bookId values\n  const [savedMovieIds, setSavedMovieIds] = useState(getSavedMovieIds());\n\n  useEffect(() => {\n    return () => saveMovieIds(savedMovieIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      \n      const response = await searchMovie(searchInput);\n\n      // console.log(response);\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const { results } = await response.json();\n\n      const movieData = results.map((movie) => ({\n        movieId: movie.id,\n        title: movie.title,\n        description: movie.description,\n        image: movie.image || \"\",\n      }));\n\n      setSearchedMovie(movieData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const [saveMovie] = useMutation(SAVE_MOVIE);\n\n  const handleSaveMovie = async (movieId) => {\n    const movieToSave = searchedMovie.find(\n      (movie) => movie.movieId === movieId\n    );\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await saveMovie({\n        variables: { input: movieToSave },\n      });\n\n      setSavedMovieIds([...savedMovieIds, movieToSave.movieId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n\n          <h1>Search for Movies(Spiderman for example :E)!</h1>\n          <Form onSubmit={handleFormSubmit}>\n\n         \n\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a movie\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedMovie.length\n            ? `Viewing ${searchedMovie.length} results:`\n            : \"Search for a movie to begin\"}\n        </h2>\n        <CardColumns>\n          {searchedMovie.map((movie) => {\n            return (\n              <Card key={movie.movieId} border=\"dark\">\n                {\" \"}\n                {movie.image ? (\n                  <Card.Img\n                    src={movie.image}\n                    alt={`The cover for ${movie.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{movie.title}</Card.Title>\n                  <Card.Text>{movie.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedMovieIds?.some(\n                        (savedMovieId) => savedMovieId === movie.movieId\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveMovie(movie.movieId)}\n                    >\n                      {savedMovieIds?.some(\n                        (savedMovieId) => savedMovieId === movie.movieId\n                      )\n                        ? \"This movie has already been favorited!\"\n                        : \"Favorite this Movie?\"}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchContent;\n","import env from \"react-dotenv\";\n\nconst apiKey = process.env.REACT_APP_APIKEY;\nconst url = process.env.REACT_APP_URL;\n\nexport const searchMovie = (query) => {\n  return fetch(\n  url +\n  apiKey +\n  query\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from '@apollo/client/link/context';\n\nimport Navbar from './components/Navbar';\n\nimport LandingPage from './pages/LandingPage';\nimport SavedContent from './pages/SavedContent';\nimport SearchContent from './pages/SearchContent';\n\n\nconst httpLink = new createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Navbar />\n          <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/search\" component={SearchContent} />\n            <Route exact path=\"/saved\" component={SavedContent} />\n            <Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} />\n          </Switch>\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}